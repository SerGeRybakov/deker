name: test-build-pipeline

on:
  push:
    tags:
      - 'v*'
      - '!v[1-9]+.[0-9]+.[0-9]+'

env:
  PYTHON_IMAGE: 3.9

jobs:
  tox_tests:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/openweathermap/deker/deker-embedded/tox:latest
      env:
        PACKAGE_VERSION: ${{ github.REF_NAME }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Set python versions
        run:  pyenv global 3.9 3.10 3.11

      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install tools
        run: |
          env
          pipx install tox poetry
        env:
          PIP_DISABLE_PIP_VERSION_CHECK: 1
      - name: Make requirements file
        run: poetry export --without-hashes > requirements.txt
      - name: Run tox tests
        run: |
          export PIP_EXTRA_INDEX_URL=https://test.pypi.org/simple
          env
          tox
        env:
          PIP_DISABLE_PIP_VERSION_CHECK: 1
          PACKAGE_VERSION: ${{ github.REF_NAME }}

  build_docs:
    needs: tox_tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Load virtual environment
        uses: actions/cache@v2
        with:
          path: venv
          key: ${{ runner.os }}-venv-${{ env.PYTHON_IMAGE }}-${{ hashFiles('pyproject.toml', 'poetry.lock') }}
      - name: Make Sphinx docs
        run: |
          source venv/bin/activate
          doc8 --config pyproject.toml docs/deker
          cd ./docs
          make html
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: docs/_build/html


  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build sdist
        run: |
          pipx install poetry
          poetry build -f sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  upload_test_pypi:
    needs: build_sdist
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    environment:
      name: testpypi
      url: https://test.pypi.org/p/deker

    steps:
      - uses: actions/download-artifact@v3
        with:
          # unpacks default artifact into dist/
          # if `name: artifact` is omitted, the action will create extra parent dir
          name: artifact
          path: dist

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
